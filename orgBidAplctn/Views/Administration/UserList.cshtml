@section Styles {
    <!-- OTHER CSS INCLUDED ON THIS PAGE - START -->
    <link rel="stylesheet" href="~/lib/jquery-datatable/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/lib/jquery-datatable/fixedeader/dataTables.fixedcolumns.bootstrap4.min.css">
    <link rel="stylesheet" href="~/lib/jquery-datatable/fixedeader/dataTables.fixedheader.bootstrap4.min.css">
    <link rel="stylesheet" href="~/lib/toastr/toastr.min.css">
    <link rel="stylesheet" href="~/lib/sweetalert/sweetalert.css" />
    <!-- OTHER CSS INCLUDED ON THIS PAGE - END -->
}
<div class="col-lg-12" style="margin-top:20px;">
</div>
<!-- Add New Button -->
<button class="btn btn-primary mb-3" data-toggle="modal" data-target="#addModal">Add New</button>
<div class="row clearfix">
    <div class="col-lg-12">
        <div class="card">
            <div class="header">
                <h2>User List </h2>
            </div>
            <div class="body">
                <div class="table-responsive">
                    <table id="user-table" class="table table-bordered table-hover dataTable table-custom" style="width:100% !important;">
                        <thead>
                            <tr>
                                <th style="text-align:center;">User Id</th>
                                <th style="text-align:center;">User Name</th>
                                <th style="text-align:center;">Full Name</th>
                                <th style="text-align:center;">Type</th>
                                <th style="text-align:center;">Edit</th>
                                <th style="text-align:center;">Delete</th>
                                <th style="text-align:center;">Status</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Modal -->
<div class="modal" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form id="modalForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="addModalLabel">Add/Edit User</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Form fields will be dynamically populated here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="saveUser">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();

            // Initialize DataTable
            var userTable = $('#user-table').DataTable();
            retreiveServerData();

            // Function to populate the DataTable with data
            function retreiveServerData() {
                userTable.destroy();
                // Initialize the datatable
                userTable = $('#user-table').DataTable({
                    processing: true,
                    // serverSide: true, // Server Side Processing Disabling
                    // Paging Setups
                    paging: true,
                    // Searching Setups
                    searching: { regex: true },
                    contentType: "application/json",
                    dataType: "json",
                    // Set up datatable options and configuration
                    ajax: {
                        url: '/Administration/GetUserListAjax', // Replace with your actual API endpoint
                        method: 'GET',
                        dataSrc: "data",
                        data: function (d) {
                            return JSON.stringify(d);
                        }
                    },
                    // Define the columns
                    columns: [
                        {
                            data: 'userId',
                            className: 'text-center'
                        },
                        { data: 'userNm' },
                        {
                            data: null,
                            render: function (data, type, row) {
                                var fullName = row.fastName.trim() + ' ' + row.lastName.trim();
                                return fullName;
                            }
                        },
                        {
                            data: 'loginTp',
                            render: function (data, type, row) {
                                var label;
                                switch (data) {
                                    case 1:
                                        label = 'User';
                                        break;
                                    case 2:
                                        label = 'Manager';
                                        break;
                                    case 3:
                                        label = 'Admin';
                                        break;
                                    default:
                                        label = '';
                                }
                                return label;
                            }
                        },
                        {
                            data: 'canMod',
                            render: function (data, type, row) {
                                if (data === 1) {
                                    // return '<span class="badge badge-info">Yes</span>';
                                    return '<i class="fa fa-check"></i>'; // Display tick mark icon
                                } else {
                                    return ''; // Display nothing for 0
                                }
                            },
                            className: 'text-center'
                        },
                        {
                            data: 'canDel',
                            render: function (data, type, row) {
                                if (data === 1) {
                                    // return '<span class="badge badge-info">Yes</span>';
                                    return '<i class="fa fa-check"></i>'; // Display tick mark icon
                                } else {
                                    return ''; // Display nothing for 0
                                }
                            },
                            className: 'text-center'
                        },
                        {
                            data: 'isActive',
                            render: function (data, type, row) {
                                if (data === 1) {
                                    return '<span class="badge badge-info">Active</span>'; // Display tick mark icon
                                } else {
                                    return '<span class="badge badge-danger">Inactive</span>'; // Display nothing for 0
                                }
                            },
                            className: 'text-center'
                        },
                        {
                            data: null,
                            render: function (data, type, row) {
                                var editBtn = '<button type="button" class="btn btn-primary editUser" data-id="' + row.userId + '" data-toggle="modal" data-target="#addModal" title="Edit User"><i class="fa fa-edit"></i></button>';
                                var deleteBtn = '<button type="button" class="btn btn-secondary resetPasswd" data-id="' + row.userId + '" title="Reset Password"><i class="fa fa-refresh"></i></button>';
                                return editBtn + ' ' + deleteBtn;
                            },
                            className: 'text-center'
                        }
                    ]
                });
            }

            // Open Add/Edit Modal
            $('#addModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var userId = button.data('id'); // Extract category ID from data-id attribute
                var modal = $(this);
                // console.log(userId);

                // Clear previous form data
                modal.find('.modal-body').empty();

                // Set modal title based on operation
                if (userId) {
                    modal.find('.modal-title').text('Edit User');
                } else {
                    modal.find('.modal-title').text('Add User');
                }

                // Populate form fields if editing
                if (userId) {
                    $.ajax({
                        url: '/Administration/GetUserDetAjax', // Replace with your actual API endpoint
                        data: { userId: userId },
                        method: 'GET',
                        success: function (category) {
                            // Populate form fields with category data
                            modal.find('.modal-body').html(`
                                <div class="card">
                                    <div class="body">
                                        <input type="hidden" id="userId" value="${category[0].userId}">
                                        <div class="form-group" style="margin-bottom:5px !important;">
                                            <label for="userNm">User Name</label>
                                            <input type="text" class="form-control" id="userNm" value="${category[0].userNm}" required>
                                        </div>
                                        <div class="form-group" style="margin-bottom:5px !important;">
                                            <label for="userPass">Password</label>
                                            <input type="password" class="form-control" id="userPass" disabled>
                                        </div>
                                        <div class="form-row">
                                            <div class="form-group col-md-6" style="margin-bottom:5px !important;">
                                                <label for="fastName">First Name</label>
                                                <input type="text" class="form-control" id="fastName" value="${category[0].fastName}" required>
                                            </div>
                                            <div class="form-group col-md-6" style="margin-bottom:5px !important;">
                                                <label for="lastName">Last Name</label>
                                                <input type="text" class="form-control" id="lastName" value="${category[0].lastName}" required>
                                            </div>
                                        </div>
                                        <div class="form-row">
                                            <div class="form-group col-md-6">
                                                <label for="loginTp">User Type</label>
                                                <select class="custom-select" id="loginTp">
                                                    <option value="1" ${category[0].loginTp == 1 ? 'selected' : ''}>User</option>
                                                    <option value="2" ${category[0].loginTp == 2 ? 'selected' : ''}>Manager</option>
                                                    <option value="3" ${category[0].loginTp == 3 ? 'selected' : ''}>Admin</option>
                                                </select>
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label for="isActive">Status</label>
                                                <select class="custom-select" id="isActive">
                                                    <option value="1" ${category[0].isActive == 1 ? 'selected' : ''}>Active</option>
                                                    <option value="0" ${category[0].isActive == 0 ? 'selected' : ''}>Deactive</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="form-row">
                                            <div class="form-group col-md-6" style="margin-bottom:5px !important;">
                                                <div class="fancy-checkbox">
                                                    <label><input type="checkbox" id="canMod" ${category[0].canMod == 1 ? 'checked' : ''}><span>Can Modify</span></label>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-6" style="margin-bottom:5px !important;">
                                                <div class="fancy-checkbox">
                                                    <label><input type="checkbox" id="canDel" ${category[0].canDel == 1 ? 'checked' : ''}><span>Can Delete</span></label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `);
                        }
                    });
                } else {
                    // Populate form fields for adding a new category
                    modal.find('.modal-body').html(`
                        <div class="card">
                            <div class="body">
                                <div class="form-group" style="margin-bottom:5px !important;">
                                    <label for="userNm">User Name</label>
                                    <input type="text" class="form-control" id="userNm" required>
                                </div>
                                <div class="form-group" style="margin-bottom:5px !important;">
                                    <label for="userPass">Password</label>
                                    <input type="password" class="form-control" id="userPass" required>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6" style="margin-bottom:5px !important;">
                                        <label for="fastName">First Name</label>
                                        <input type="text" class="form-control" id="fastName" required>
                                    </div>
                                    <div class="form-group col-md-6" style="margin-bottom:5px !important;">
                                        <label for="lastName">Last Name</label>
                                        <input type="text" class="form-control" id="lastName" required>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="loginTp">User Type</label>
                                        <select class="custom-select" id="loginTp">
                                            <option value="1" selected>User</option>
                                            <option value="2">Manager</option>
                                            <option value="3">Admin</option>
                                        </select>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="isActive">Status</label>
                                        <select class="custom-select" id="isActive">
                                            <option value="1" selected>Active</option>
                                            <option value="0">Deactive</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6" style="margin-bottom:5px !important;">
                                        <div class="fancy-checkbox">
                                            <label><input type="checkbox" id="canMod"><span>Can Modify</span></label>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6" style="margin-bottom:5px !important;">
                                        <div class="fancy-checkbox">
                                            <label><input type="checkbox" id="canDel"><span>Can Delete</span></label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `);
                }
            });

            // Handle form submission
            $('#modalForm').submit(function (event) {
                event.preventDefault();
                $("#saveUser").html("Saving...");
                $("#saveUser").prop("disabled", true);
                var userId = $('#userId').val();
                var userNm = $('#userNm').val().trim();
                var userPass = $('#userPass').val();
                var fastName = $('#fastName').val().trim();
                var lastName = $('#lastName').val().trim();
                var loginTp = $('#loginTp').val();
                var isActive = $('#isActive').val();
                var canMod = $('#canMod').is(':checked') ? 1 : 0;
                var canDel = $('#canDel').is(':checked') ? 1 : 0;

                if (userNm.length == 0) {
                    swal("Blank Data", "You need to give User Name before Continue !!!", "warning");
                    $("#saveUser").html("Save");
                    $("#saveUser").prop("disabled", false);
                    return false;
                }
                if (fastName.length == 0) {
                    swal("Blank Data", "You need to give First Name before Continue !!!", "warning");
                    $("#saveUser").html("Save");
                    $("#saveUser").prop("disabled", false);
                    return false;
                }
                if (lastName.length == 0) {
                    swal("Blank Data", "You need to give LastName Name before Continue !!!", "warning");
                    $("#saveUser").html("Save");
                    $("#saveUser").prop("disabled", false);
                    return false;
                }

                var userData = {
                    UserId: userId,
                    UserNm: userNm,
                    UserPass: userPass,
                    FastName: fastName,
                    LastName: lastName,
                    LoginTp: loginTp,
                    CanMod: canMod,
                    CanDel: canDel,
                    IsActive: isActive
                };
                // console.log(userData);

                $.ajax({
                    async: false,
                    url: '/Administration/AddOrEditUser',
                    method: 'POST',
                    data: {
                        id: userId,
                        model: userData
                    },
                    success: function (response) {
                        if (response.success == false) {
                            var errorMessage = response.message;
                            showErrorToast(errorMessage);
                            $("#saveUser").html("Save");
                            $("#saveUser").prop("disabled", false);
                        } else {
                            $("#saveUser").html("Save");
                            $("#saveUser").prop("disabled", false);
                            // Close the modal
                            $('#addModal').modal('hide');
                            // Reload the DataTable
                            retreiveServerData();
                        }
                    },
                    error: function (error) {
                        console.log(error);
                        showErrorToast(error.status + ': ' + error.statusText);
                        $("#saveUser").html("Save");
                        $("#saveUser").prop("disabled", false);
                    }
                });
            });

            // Delete Category
            $('#user-table').on('click', '.resetPasswd', function () {
                var userId = $(this).data('id');
                // console.log(userId);

                swal({
                    title: "Are you sure?",
                    text: "This will reset the Password to 123456 !",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#dc3545",
                    confirmButtonText: "Yes, change it!",
                    closeOnConfirm: false
                }, function () {
                    $.ajax({
                        url: '/Administration/ResetPasswd', // Replace with your actual API endpoint
                        method: 'POST',
                        data: { id: userId },
                        success: function (response) {
                            if (response.success == false) {
                                var errorMessage = response.message;
                                showErrorToast(errorMessage);
                            } else {
                                // Reload the DataTable
                                retreiveServerData();
                                swal("Password Changed !", "Password changed to 123456. Please inform user to change ASAP.", "success");
                            }
                        },
                        error: function (error) {
                            console.log(error);
                            showErrorToast(error.status + ': ' + error.statusText);
                        }
                    });
                });
            });

            function showErrorToast(errorInfo) {
                //https://codeseven.github.io/toastr/demo.html
                toastr.options = {
                    timeOut: "3000",
                    closeButton: true,
                    newestOnTop: true,
                    progressBar: true,
                    positionClass: 'toast-bottom-right'
                };
                toastr['error']('Error Occured: ' + errorInfo);
            }
        });

    </script>
    <!-- OTHER SCRIPTS INCLUDED ON THIS PAGE - START -->
    <script src="~/lib/bundles/datatablescripts.bundle.js"></script>
    <script src="~/lib/jquery-datatable/buttons/dataTables.buttons.min.js"></script>
    <script src="~/lib/jquery-datatable/buttons/buttons.bootstrap4.min.js"></script>
    <script src="~/lib/jquery-datatable/buttons/buttons.colVis.min.js"></script>
    <script src="~/lib/jquery-datatable/buttons/buttons.html5.min.js"></script>
    <script src="~/lib/jquery-datatable/buttons/buttons.print.min.js"></script>
    <script src="~/lib/toastr/toastr.js"></script>
    <script src="~/lib/sweetalert/sweetalert.min.js"></script> <!-- SweetAlert Plugin Js -->
    <!-- OTHER SCRIPTS INCLUDED ON THIS PAGE - END -->
}
